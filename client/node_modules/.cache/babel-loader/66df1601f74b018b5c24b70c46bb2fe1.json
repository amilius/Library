{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactZad\\\\graphql\\\\client\\\\src\\\\components\\\\BookList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBooksQuery } from '../queries/queries';\nimport { BookDetails } from './BookDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookList = () => {\n  _s();\n\n  const [selected, setSelected] = React.useState(null);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBooksQuery);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"book-list\",\n      children: data.books.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => {\n          setSelected(book.id);\n        },\n        children: book.name\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookDetails, {\n      bookId: selected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BookList, \"3aSApvE9pPj56dSH7kM86NRwN2g=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"sources":["D:/reactZad/graphql/client/src/components/BookList.js"],"names":["React","useQuery","getBooksQuery","BookDetails","BookList","selected","setSelected","useState","loading","error","data","books","map","book","e","id","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACC,aAAD,CAAzC;AACA,MAAIM,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBACE;AAAA,4BACE;AAAI,MAAA,EAAE,EAAC,WAAP;AAAA,gBACKC,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAeC,IAAI,iBAChB;AAAkB,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACR,UAAAA,WAAW,CAACO,IAAI,CAACE,EAAN,CAAX;AAAqB,SAAxD;AAAA,kBAA2DF,IAAI,CAACG;AAAhE,SAASH,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEV;AAArB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUH,CAfM;;GAAMD,Q;UAEwBH,Q;;;KAFxBG,Q","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { getBooksQuery } from '../queries/queries';\r\nimport { BookDetails } from './BookDetails';\r\n\r\nexport const BookList = () => {\r\n    const [ selected, setSelected ] = React.useState(null);\r\n    const { loading, error, data } = useQuery(getBooksQuery);\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error </p>;\r\n    return (\r\n      <div>\r\n        <ul id=\"book-list\">\r\n            {data.books.map(book => (\r\n                <li key={book.id} onClick={(e) => {setSelected(book.id)}}>{book.name}</li>\r\n            ))}\r\n        </ul>\r\n        <BookDetails bookId={selected} />\r\n      </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}