{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactZad\\\\graphql\\\\client\\\\src\\\\components\\\\AddBook.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddBook = () => {\n  _s();\n\n  const [book, setBook] = React.useState();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getAuthorsQuery);\n  const q = useQuery(addBookMutation);\n  console.log('q', q);\n\n  const displayAuthors = () => {\n    if (loading) return /*#__PURE__*/_jsxDEV(\"option\", {\n      disabled: true,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 29\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"option\", {\n      disabled: true,\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 27\n    }, this);\n    return data.authors.map(author => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: author.id,\n      children: author.name\n    }, author.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 39\n    }, this));\n  };\n\n  const submitForm = e => {\n    e.preventDefault();\n    console.log('book', book);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"add-book\",\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setBook({ ...book,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setBook({ ...book,\n          genre: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setBook({ ...book,\n          authorId: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Select author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), displayAuthors()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddBook, \"vpovgMfJ2eK40CppaPXfycaehgA=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = AddBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddBook\");","map":{"version":3,"sources":["D:/reactZad/graphql/client/src/components/AddBook.js"],"names":["React","useQuery","getAuthorsQuery","addBookMutation","AddBook","book","setBook","useState","loading","error","data","q","console","log","displayAuthors","authors","map","author","id","name","submitForm","e","preventDefault","target","value","genre","authorId"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,oBAAjD;;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBN,KAAK,CAACO,QAAN,EAA1B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACC,eAAD,CAAzC;AACA,QAAMS,CAAC,GAAGV,QAAQ,CAACE,eAAD,CAAlB;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBF,CAAjB;;AAEA,QAAMG,cAAc,GAAG,MAAM;AACzB,QAAIN,OAAJ,EAAa,oBAAO;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACf,WAAOC,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAiBC,MAAM,iBAAI;AAAwB,MAAA,KAAK,EAAEA,MAAM,CAACC,EAAtC;AAAA,gBAA2CD,MAAM,CAACE;AAAlD,OAAaF,MAAM,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,YAA3B,CAAP;AACC,GAJD;;AAMA,QAAME,UAAU,GAAIC,CAAD,IAAO;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,IAApB;AACH,GAHD;;AAKA,sBACE;AAAM,IAAA,EAAE,EAAC,UAAT;AAAoB,IAAA,QAAQ,EAAEe,UAA9B;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGC,CAAD,IAAOf,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUc,UAAAA,IAAI,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAzB,SAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGH,CAAD,IAAOf,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUoB,UAAAA,KAAK,EAAEJ,CAAC,CAACE,MAAF,CAASC;AAA1B,SAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,QAAQ,EAAGH,CAAD,IAAOf,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUqB,UAAAA,QAAQ,EAAEL,CAAC,CAACE,MAAF,CAASC;AAA7B,SAAD,CAAhC;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKV,cAAc,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBH,CAxCM;;GAAMV,O;UAEwBH,Q,EACvBA,Q;;;KAHDG,O","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { getAuthorsQuery, addBookMutation } from '../queries/queries';\r\n\r\nexport const AddBook = () => {\r\n    const [ book, setBook ] = React.useState();\r\n    const { loading, error, data } = useQuery(getAuthorsQuery);\r\n    const q = useQuery(addBookMutation);\r\n    console.log('q', q);\r\n    \r\n    const displayAuthors = () => {\r\n        if (loading) return <option disabled>Loading...</option>;\r\n        if (error) return <option disabled>Error</option>;\r\n    return data.authors.map(author => <option key={author.id} value={author.id}>{author.name}</option>)\r\n    };\r\n    \r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        console.log('book', book);\r\n    };\r\n\r\n    return (\r\n      <form id=\"add-book\" onSubmit={submitForm}>\r\n        <div className=\"field\">\r\n            <label>Book name:</label>\r\n            <input type=\"text\" onChange={(e) => setBook({...book, name: e.target.value})}/>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            <label>Genre:</label>\r\n            <input type=\"text\" onChange={(e) => setBook({...book, genre: e.target.value})}/>\r\n        </div>\r\n\r\n        <div className=\"field\">\r\n            <label>Author:</label>\r\n            <select onChange={(e) => setBook({...book, authorId: e.target.value})}>\r\n                <option >Select author</option>\r\n                {displayAuthors()}\r\n            </select>\r\n        </div>\r\n\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}