{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactZad\\\\graphql\\\\client\\\\src\\\\components\\\\BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBookQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookDetails = ({\n  bookId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: DisplayBookDetails(bookId)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n_c = BookDetails;\n\nconst DisplayBookDetails = bookId => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBookQuery, {\n    variables: {\n      id: bookId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 23\n  }, this);\n\n  if (!bookId) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: data.book.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.book.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.book.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All books by the author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"other-books\",\n        children: data.book.author.books.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(DisplayBookDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = DisplayBookDetails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BookDetails\");\n$RefreshReg$(_c2, \"DisplayBookDetails\");","map":{"version":3,"sources":["D:/reactZad/graphql/client/src/components/BookDetails.js"],"names":["React","useQuery","getBookQuery","BookDetails","bookId","DisplayBookDetails","loading","error","data","variables","id","book","name","genre","author","books","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACvC,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cACGC,kBAAkB,CAACD,MAAD;AADrB;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CANM;KAAMD,W;;AAQb,MAAME,kBAAkB,GAAID,MAAD,IAAY;AAAA;;AACnC,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,YAAD,EAAe;AAACO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN;AAAN;AAAZ,GAAf,CAAzC;AACA,MAAIE,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACX,MAAG,CAACH,MAAJ,EAAY;AACR,wBACI;AAAA,8BACI;AAAA,kBAAKI,IAAI,CAACG,IAAL,CAAUC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIJ,IAAI,CAACG,IAAL,CAAUE;AAAd;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIL,IAAI,CAACG,IAAL,CAAUG,MAAV,CAAiBF;AAArB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBACKJ,IAAI,CAACG,IAAL,CAAUG,MAAV,CAAiBC,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAI;AAChC,8BAAO;AAAA,sBAAmBA,IAAI,CAACL;AAAxB,aAASK,IAAI,CAACP,EAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAdD,MAcO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,CAvBD;;GAAML,kB;UAC+BJ,Q;;;MAD/BI,kB","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\n\r\nexport const BookDetails = ({ bookId }) => {\r\n    return (\r\n      <div id=\"book-details\">\r\n        {DisplayBookDetails(bookId)}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst DisplayBookDetails = (bookId) => {\r\n    const { loading, error, data } = useQuery(getBookQuery, {variables: { id: bookId }});\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error </p>;\r\n    if(!bookId) {\r\n        return (\r\n            <div>\r\n                <h2>{data.book.name}</h2>\r\n                <p>{data.book.genre}</p>\r\n                <p>{data.book.author.name}</p>\r\n                <p>All books by the author</p>\r\n                <ul className=\"other-books\">\r\n                    {data.book.author.books.map(item => {\r\n                        return <li key={item.id}>{item.name}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>No selection</div>\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}