{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactZad\\\\graphql\\\\client\\\\src\\\\components\\\\BookDetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { getBookQuery } from '../queries/queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookDetails = ({\n  bookId\n}) => {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getBookQuery, {\n    variables: {\n      id: bookId\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"book-details\",\n    children: displayBookDetails(data.book)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BookDetails, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = BookDetails;\n\nconst displayBookDetails = book => {\n  console.log(book);\n\n  if (book) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: book.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: book.genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: book.author.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All books by the author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"other-books\",\n        children: book.author.name.books.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"BookDetails\");","map":{"version":3,"sources":["D:/reactZad/graphql/client/src/components/BookDetails.js"],"names":["React","useQuery","getBookQuery","BookDetails","bookId","loading","error","data","variables","id","displayBookDetails","book","console","log","name","genre","author","books","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;AAGA,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AACvC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BN,QAAQ,CAACC,YAAD,EAAe;AAACM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEL;AAAN;AAAZ,GAAf,CAAzC;AACA,MAAIC,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,cACGI,kBAAkB,CAACH,IAAI,CAACI,IAAN;AADrB;AAAA;AAAA;AAAA;AAAA,UADF;AAKH,CAXM;;GAAMR,W;UACwBF,Q;;;KADxBE,W;;AAab,MAAMO,kBAAkB,GAAIC,IAAD,IAAU;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACI,MAAGA,IAAH,EAAS;AACL,wBACI;AAAA,8BACI;AAAA,kBAAKA,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAIJ,IAAI,CAACK,MAAL,CAAYF;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA,kBACKH,IAAI,CAACK,MAAL,CAAYF,IAAZ,CAAiBG,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,IAAI;AAChC,8BAAO;AAAA,sBAAmBA,IAAI,CAACL;AAAxB,aAASK,IAAI,CAACV,EAAd;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFA;AADL;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH,GAdD,MAcO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,CArBD","sourcesContent":["import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\n\r\nexport const BookDetails = ({ bookId }) => {\r\n    const { loading, error, data } = useQuery(getBookQuery, {variables: { id: bookId}});\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error </p>;\r\n    \r\n    \r\n    return (\r\n      <div id=\"book-details\">\r\n        {displayBookDetails(data.book)}\r\n      </div>\r\n    );\r\n}\r\n\r\nconst displayBookDetails = (book) => {\r\nconsole.log(book);\r\n    if(book) {\r\n        return (\r\n            <div>\r\n                <h2>{book.name}</h2>\r\n                <p>{book.genre}</p>\r\n                <p>{book.author.name}</p>\r\n                <p>All books by the author</p>\r\n                <ul className=\"other-books\">\r\n                    {book.author.name.books.map(item => {\r\n                        return <li key={item.id}>{item.name}</li>\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>No selection</div>\r\n        )\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}